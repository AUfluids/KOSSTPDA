/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
        (0 -0.1 0.05)//0
        (1 -0.1 0.05)//1
        (1  0.1 0.05)//2
        (0  0.1 0.05)//3
        (0 -0.1  0.5)//4
        (1 -0.1  0.5)//5
        (1  0.1  0.5)//6
        (0  0.1  0.5)//7
        (0 -0.1  1)//8
        (1 -0.1  1)//9
        (1  0.1  1)//10
        (0  0.1  1)//11
);

blocks
(
        //hex (0 1 3 2 6 7 9 8) (40 25 30) simpleGrading (1 10.7028 1)
        hex (0 1 2 3 4 5 6 7) (100 1 10) simpleGrading (1 1 10)
        hex (4 5 6 7 8 9 10 11) (100 1 10) simpleGrading (1 1 0.1)
);

/*
edges
(
      spline 0 1 ((0.25 -0.1 0.1))
      spline 3 2 ((0.75  0.1 0.1))
);
*/

edges
(
spline 0 1 (
(0.0 -0.1 0.05)
(0.01 -0.1 0.0499013364214)
(0.02 -0.1 0.0496057350657)
(0.03 -0.1 0.0491143625364)
(0.04 -0.1 0.0484291580564)
(0.05 -0.1 0.0475528258148)
(0.06 -0.1 0.0464888242944)
(0.07 -0.1 0.0452413526233)
(0.08 -0.1 0.0438153340022)
(0.09 -0.1 0.0422163962751)
(0.1 -0.1 0.0404508497187)
(0.11 -0.1 0.0385256621388)
(0.12 -0.1 0.0364484313711)
(0.13 -0.1 0.0342273552964)
(0.14 -0.1 0.0318711994874)
(0.15 -0.1 0.0293892626146)
(0.16 -0.1 0.0267913397489)
(0.17 -0.1 0.0240876837051)
(0.18 -0.1 0.0212889645783)
(0.19 -0.1 0.0184062276342)
(0.2 -0.1 0.0154508497187)
(0.21 -0.1 0.0124344943582)
(0.22 -0.1 0.00936906572929)
(0.23 -0.1 0.00626666167822)
(0.24 -0.1 0.00313952597647)
(0.25 -0.1 3.06161699787e-18)
(0.26 -0.1 -0.00313952597647)
(0.27 -0.1 -0.00626666167822)
(0.28 -0.1 -0.00936906572929)
(0.29 -0.1 -0.0124344943582)
(0.3 -0.1 -0.0154508497187)
(0.31 -0.1 -0.0184062276342)
(0.32 -0.1 -0.0212889645783)
(0.33 -0.1 -0.0240876837051)
(0.34 -0.1 -0.0267913397489)
(0.35 -0.1 -0.0293892626146)
(0.36 -0.1 -0.0318711994874)
(0.37 -0.1 -0.0342273552964)
(0.38 -0.1 -0.0364484313711)
(0.39 -0.1 -0.0385256621388)
(0.4 -0.1 -0.0404508497187)
(0.41 -0.1 -0.0422163962751)
(0.42 -0.1 -0.0438153340022)
(0.43 -0.1 -0.0452413526233)
(0.44 -0.1 -0.0464888242944)
(0.45 -0.1 -0.0475528258148)
(0.46 -0.1 -0.0484291580564)
(0.47 -0.1 -0.0491143625364)
(0.48 -0.1 -0.0496057350657)
(0.49 -0.1 -0.0499013364214)
(0.5 -0.1 -0.05)
(0.51 -0.1 -0.0499013364214)
(0.52 -0.1 -0.0496057350657)
(0.53 -0.1 -0.0491143625364)
(0.54 -0.1 -0.0484291580564)
(0.55 -0.1 -0.0475528258148)
(0.56 -0.1 -0.0464888242944)
(0.57 -0.1 -0.0452413526233)
(0.58 -0.1 -0.0438153340022)
(0.59 -0.1 -0.0422163962751)
(0.6 -0.1 -0.0404508497187)
(0.61 -0.1 -0.0385256621388)
(0.62 -0.1 -0.0364484313711)
(0.63 -0.1 -0.0342273552964)
(0.64 -0.1 -0.0318711994874)
(0.65 -0.1 -0.0293892626146)
(0.66 -0.1 -0.0267913397489)
(0.67 -0.1 -0.0240876837051)
(0.68 -0.1 -0.0212889645783)
(0.69 -0.1 -0.0184062276342)
(0.7 -0.1 -0.0154508497187)
(0.71 -0.1 -0.0124344943582)
(0.72 -0.1 -0.00936906572929)
(0.73 -0.1 -0.00626666167822)
(0.74 -0.1 -0.00313952597647)
(0.75 -0.1 -9.18485099361e-18)
(0.76 -0.1 0.00313952597647)
(0.77 -0.1 0.00626666167822)
(0.78 -0.1 0.00936906572929)
(0.79 -0.1 0.0124344943582)
(0.8 -0.1 0.0154508497187)
(0.81 -0.1 0.0184062276342)
(0.82 -0.1 0.0212889645783)
(0.83 -0.1 0.0240876837051)
(0.84 -0.1 0.0267913397489)
(0.85 -0.1 0.0293892626146)
(0.86 -0.1 0.0318711994874)
(0.87 -0.1 0.0342273552964)
(0.88 -0.1 0.0364484313711)
(0.89 -0.1 0.0385256621388)
(0.9 -0.1 0.0404508497187)
(0.91 -0.1 0.0422163962751)
(0.92 -0.1 0.0438153340022)
(0.93 -0.1 0.0452413526233)
(0.94 -0.1 0.0464888242944)
(0.95 -0.1 0.0475528258148)
(0.96 -0.1 0.0484291580564)
(0.97 -0.1 0.0491143625364)
(0.98 -0.1 0.0496057350657)
(0.99 -0.1 0.0499013364214)
(1.0 -0.1 0.05)
)
spline 3 2 (
(0.0 0.1 0.05)
(0.01 0.1 0.0499013364214)
(0.02 0.1 0.0496057350657)
(0.03 0.1 0.0491143625364)
(0.04 0.1 0.0484291580564)
(0.05 0.1 0.0475528258148)
(0.06 0.1 0.0464888242944)
(0.07 0.1 0.0452413526233)
(0.08 0.1 0.0438153340022)
(0.09 0.1 0.0422163962751)
(0.1 0.1 0.0404508497187)
(0.11 0.1 0.0385256621388)
(0.12 0.1 0.0364484313711)
(0.13 0.1 0.0342273552964)
(0.14 0.1 0.0318711994874)
(0.15 0.1 0.0293892626146)
(0.16 0.1 0.0267913397489)
(0.17 0.1 0.0240876837051)
(0.18 0.1 0.0212889645783)
(0.19 0.1 0.0184062276342)
(0.2 0.1 0.0154508497187)
(0.21 0.1 0.0124344943582)
(0.22 0.1 0.00936906572929)
(0.23 0.1 0.00626666167822)
(0.24 0.1 0.00313952597647)
(0.25 0.1 3.06161699787e-18)
(0.26 0.1 -0.00313952597647)
(0.27 0.1 -0.00626666167822)
(0.28 0.1 -0.00936906572929)
(0.29 0.1 -0.0124344943582)
(0.3 0.1 -0.0154508497187)
(0.31 0.1 -0.0184062276342)
(0.32 0.1 -0.0212889645783)
(0.33 0.1 -0.0240876837051)
(0.34 0.1 -0.0267913397489)
(0.35 0.1 -0.0293892626146)
(0.36 0.1 -0.0318711994874)
(0.37 0.1 -0.0342273552964)
(0.38 0.1 -0.0364484313711)
(0.39 0.1 -0.0385256621388)
(0.4 0.1 -0.0404508497187)
(0.41 0.1 -0.0422163962751)
(0.42 0.1 -0.0438153340022)
(0.43 0.1 -0.0452413526233)
(0.44 0.1 -0.0464888242944)
(0.45 0.1 -0.0475528258148)
(0.46 0.1 -0.0484291580564)
(0.47 0.1 -0.0491143625364)
(0.48 0.1 -0.0496057350657)
(0.49 0.1 -0.0499013364214)
(0.5 0.1 -0.05)
(0.51 0.1 -0.0499013364214)
(0.52 0.1 -0.0496057350657)
(0.53 0.1 -0.0491143625364)
(0.54 0.1 -0.0484291580564)
(0.55 0.1 -0.0475528258148)
(0.56 0.1 -0.0464888242944)
(0.57 0.1 -0.0452413526233)
(0.58 0.1 -0.0438153340022)
(0.59 0.1 -0.0422163962751)
(0.6 0.1 -0.0404508497187)
(0.61 0.1 -0.0385256621388)
(0.62 0.1 -0.0364484313711)
(0.63 0.1 -0.0342273552964)
(0.64 0.1 -0.0318711994874)
(0.65 0.1 -0.0293892626146)
(0.66 0.1 -0.0267913397489)
(0.67 0.1 -0.0240876837051)
(0.68 0.1 -0.0212889645783)
(0.69 0.1 -0.0184062276342)
(0.7 0.1 -0.0154508497187)
(0.71 0.1 -0.0124344943582)
(0.72 0.1 -0.00936906572929)
(0.73 0.1 -0.00626666167822)
(0.74 0.1 -0.00313952597647)
(0.75 0.1 -9.18485099361e-18)
(0.76 0.1 0.00313952597647)
(0.77 0.1 0.00626666167822)
(0.78 0.1 0.00936906572929)
(0.79 0.1 0.0124344943582)
(0.8 0.1 0.0154508497187)
(0.81 0.1 0.0184062276342)
(0.82 0.1 0.0212889645783)
(0.83 0.1 0.0240876837051)
(0.84 0.1 0.0267913397489)
(0.85 0.1 0.0293892626146)
(0.86 0.1 0.0318711994874)
(0.87 0.1 0.0342273552964)
(0.88 0.1 0.0364484313711)
(0.89 0.1 0.0385256621388)
(0.9 0.1 0.0404508497187)
(0.91 0.1 0.0422163962751)
(0.92 0.1 0.0438153340022)
(0.93 0.1 0.0452413526233)
(0.94 0.1 0.0464888242944)
(0.95 0.1 0.0475528258148)
(0.96 0.1 0.0484291580564)
(0.97 0.1 0.0491143625364)
(0.98 0.1 0.0496057350657)
(0.99 0.1 0.0499013364214)
(1.0 0.1 0.05)
)
);

boundary
(
    bottomWall
    {
        type            wall;
        faces           ((0 3 2 1));
    }
    topWall
    {
        type            wall;
        faces           ((8 9 10 11));
    }

    inlet_half0
    {
        type            cyclic;
        neighbourPatch  outlet_half0;
        faces           ((0 4 7 3));
    }

    inlet_half1
    {
        type            cyclic;
        neighbourPatch  outlet_half1;
        faces           ((4 8 11 7));
    }

    outlet_half0
    {
        type            cyclic;
        neighbourPatch  inlet_half0;
        faces           ((6 5 1 2));
    }

    outlet_half1
    {
        type            cyclic;
        neighbourPatch  inlet_half1;
        faces           ((10 9 5 6));
    }

    sideRight_half0
    {
        type            cyclic;
        neighbourPatch  sideLeft_half0;
        faces           ((0 1 5 4));
    }

    sideRight_half1
    {
        type            cyclic;
        neighbourPatch  sideLeft_half1;
        faces           ((4 5 9 8));
    }

    sideLeft_half0
    {
        type            cyclic;
        neighbourPatch  sideRight_half0;
        faces           ((3 7 6 2));
    }

    sideLeft_half1
    {
        type            cyclic;
        neighbourPatch  sideRight_half1;
        faces           ((7 11 10 6));
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
